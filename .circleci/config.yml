# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.14

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}

    environment:
      HELM_VERSION: "v3.2.4"
      DEP_VERSION: "0.5.4"
      KUBERNETES_VERSION: "1.15.0"
      OPENSHIFT_VERSION: "3.11.0"
      MINIKUBE_VERSION: "1.2.0"
      MINISHIFT_VERSION: "1.34.2"
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      CHANGE_MINIKUBE_NONE_USER: true
      REQUIRES_MINIKUBE: true

    parallelism: 4
    
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Run the tests
          command: |
            export KUBECONFIG="$HOME/.kube/config"
            export MINIKUBE_HOME="$HOME"
            chmod a+x scripts/ci/*.sh
            scripts/ci/install_deps.sh
            [ "$CIRCLE_NODE_INDEX" = "0" ] && TEST_SUITE="basic" scripts/ci/determine_and_run_tests.sh
            test_suites=("minikube-short" "minikube-long" "minikube-diagnostics" "minikube-upgrade")
            export TEST_SUITE=${test_suites[$CIRCLE_NODE_INDEX]}
            scripts/ci/determine_and_run_tests.sh
